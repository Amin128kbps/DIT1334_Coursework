package Chapter1;

//Name : Mohammad Amin
//Date of Creation : 30/9/2025
//Purpose of code : To show method overload


//Java program to demonstrate working of method
// overloading in Java
public class Sum {
	
	    // Overloaded sum() 
	    // This sum takes two int parameters
	    public int sum(int a, int b) { return (a + b); }

	    // Overloaded sum()
	    // This sum takes three int parameters
	    public int sum(int a, int b, int c)
	    {
	        return (a + b + c);
	    }

	    // Overloaded sum() 
	    // This sum takes two double parameters
	    public double sum(double a, double b)
	    {
	        return (a + b);
	    }

	    // Driver code
	    public static void main(String args[])
	    {
	        Sum s = new Sum();
	        System.out.println(s.sum(10, 20));
	        System.out.println(s.sum(10, 20, 30));
	        System.out.println(s.sum(10.5, 20.5));
	        
	        //the output will be somewhat like a calculator
	    }
	}



package Chapter1; //my package name


//Main class to test
public class Main {
	public static void main(String[] args) {
		Circle c = new Circle(5.0);
		System.out.println("Radius: "+ c.radius);
		System.out.println("Area: "+ c.area());
		System.out.println("Circumference: "+ c.circumference());
	}
}



package Chapter1;

//Name : Mohammad Amin
//Date of creation : 1/10/2025
//Purpose of code : Overriding method example

class Furniture { //main class
	void description() {
		System.out.println("This is a furniture");
	}
}


class Table extends Furniture { //extract the main class that override
	@Override                  //the "description" method
	void description() { //overrided method to show the description of the furniture
		System.out.println("This is a table"); //the output
	}
}

public class Polymorphism {
	public static void main(String[]args) {
		
		Furniture f = new Table();
		f.description();
	}

}
